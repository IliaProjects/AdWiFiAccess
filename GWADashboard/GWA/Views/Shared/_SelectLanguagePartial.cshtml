@using Microsoft.AspNetCore.Builder
@using Microsoft.AspNetCore.Http.Features
@using Microsoft.AspNetCore.Localization
@using Microsoft.Extensions.Options
@using Microsoft.AspNetCore.Mvc.Localization;
@using System.Collections;

@inject IViewLocalizer Localizer
@inject IOptions<RequestLocalizationOptions> LocOptions
@{
    var requestCulture = Context.Features.Get<IRequestCultureFeature>();
    var cultureItems = LocOptions.Value.SupportedUICultures
        .Select(c => new SelectListItem { Value = c.Name, Text = c.TwoLetterISOLanguageName })
        .ToList();

    List<CultureViewModel> langsValues = new List<CultureViewModel>();
    //List<string> langsText = new List<string>();
}


@foreach (var item in cultureItems)
{
    langsValues.Add(new CultureViewModel(item.Value.ToUpper(), item.Value));
    //langsText.Add(item.Text);
}

<script>
    function changeLang(data) {
        $("#culture").val(data.value);
        $("#selectLangForm").submit();
    }
</script>


@(Html.DevExtreme()
    .SelectBox()
    .DataSource(langsValues)
    .Value(requestCulture.RequestCulture.Culture.TwoLetterISOLanguageName)
    .DisplayExpr("text")
    .ValueExpr("value")
    .ID("langContainer")
    .Placeholder("")
    .OnValueChanged("changeLang")
)

<!--Change Lang-->
<form id="selectLangForm" asp-controller="Home" asp-action="SetLanguage" asp-route-returnUrl="@Context.Request.Path" method="post" role="form">
    <input type="hidden" id="culture" name="culture" />
</form>

